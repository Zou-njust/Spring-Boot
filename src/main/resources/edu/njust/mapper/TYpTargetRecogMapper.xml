<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.njust.mapper.TYpTargetRecogMapper">
  <resultMap id="BaseResultMap" type="edu.njust.model.TYpTargetRecog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="target_id" jdbcType="VARCHAR" property="targetId" />
    <result column="target_type" jdbcType="TINYINT" property="targetType" />
    <result column="point_id" jdbcType="VARCHAR" property="pointId" />
    <result column="aircraft_id" jdbcType="VARCHAR" property="aircraftId" />
    <result column="target_name" jdbcType="VARCHAR" property="targetName" />
    <result column="judge_means" jdbcType="TINYINT" property="judgeMeans" />
    <result column="probability" jdbcType="TINYINT" property="probability" />
    <result column="import_time" jdbcType="TIMESTAMP" property="importTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, target_id, target_type, point_id, aircraft_id, target_name, judge_means, probability, 
    import_time
  </sql>
  <select id="selectByExample" parameterType="edu.njust.model.TYpTargetRecogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_yp_target_recog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_yp_target_recog
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_yp_target_recog
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="edu.njust.model.TYpTargetRecogExample">
    delete from t_yp_target_recog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.njust.model.TYpTargetRecog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_yp_target_recog (target_id, target_type, point_id, 
      aircraft_id, target_name, judge_means, 
      probability, import_time)
    values (#{targetId,jdbcType=VARCHAR}, #{targetType,jdbcType=TINYINT}, #{pointId,jdbcType=VARCHAR}, 
      #{aircraftId,jdbcType=VARCHAR}, #{targetName,jdbcType=VARCHAR}, #{judgeMeans,jdbcType=TINYINT}, 
      #{probability,jdbcType=TINYINT}, #{importTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="edu.njust.model.TYpTargetRecog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_yp_target_recog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="targetId != null">
        target_id,
      </if>
      <if test="targetType != null">
        target_type,
      </if>
      <if test="pointId != null">
        point_id,
      </if>
      <if test="aircraftId != null">
        aircraft_id,
      </if>
      <if test="targetName != null">
        target_name,
      </if>
      <if test="judgeMeans != null">
        judge_means,
      </if>
      <if test="probability != null">
        probability,
      </if>
      <if test="importTime != null">
        import_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="targetId != null">
        #{targetId,jdbcType=VARCHAR},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=TINYINT},
      </if>
      <if test="pointId != null">
        #{pointId,jdbcType=VARCHAR},
      </if>
      <if test="aircraftId != null">
        #{aircraftId,jdbcType=VARCHAR},
      </if>
      <if test="targetName != null">
        #{targetName,jdbcType=VARCHAR},
      </if>
      <if test="judgeMeans != null">
        #{judgeMeans,jdbcType=TINYINT},
      </if>
      <if test="probability != null">
        #{probability,jdbcType=TINYINT},
      </if>
      <if test="importTime != null">
        #{importTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.njust.model.TYpTargetRecogExample" resultType="java.lang.Long">
    select count(*) from t_yp_target_recog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_yp_target_recog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.targetId != null">
        target_id = #{record.targetId,jdbcType=VARCHAR},
      </if>
      <if test="record.targetType != null">
        target_type = #{record.targetType,jdbcType=TINYINT},
      </if>
      <if test="record.pointId != null">
        point_id = #{record.pointId,jdbcType=VARCHAR},
      </if>
      <if test="record.aircraftId != null">
        aircraft_id = #{record.aircraftId,jdbcType=VARCHAR},
      </if>
      <if test="record.targetName != null">
        target_name = #{record.targetName,jdbcType=VARCHAR},
      </if>
      <if test="record.judgeMeans != null">
        judge_means = #{record.judgeMeans,jdbcType=TINYINT},
      </if>
      <if test="record.probability != null">
        probability = #{record.probability,jdbcType=TINYINT},
      </if>
      <if test="record.importTime != null">
        import_time = #{record.importTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_yp_target_recog
    set id = #{record.id,jdbcType=VARCHAR},
      target_id = #{record.targetId,jdbcType=VARCHAR},
      target_type = #{record.targetType,jdbcType=TINYINT},
      point_id = #{record.pointId,jdbcType=VARCHAR},
      aircraft_id = #{record.aircraftId,jdbcType=VARCHAR},
      target_name = #{record.targetName,jdbcType=VARCHAR},
      judge_means = #{record.judgeMeans,jdbcType=TINYINT},
      probability = #{record.probability,jdbcType=TINYINT},
      import_time = #{record.importTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.njust.model.TYpTargetRecog">
    update t_yp_target_recog
    <set>
      <if test="targetId != null">
        target_id = #{targetId,jdbcType=VARCHAR},
      </if>
      <if test="targetType != null">
        target_type = #{targetType,jdbcType=TINYINT},
      </if>
      <if test="pointId != null">
        point_id = #{pointId,jdbcType=VARCHAR},
      </if>
      <if test="aircraftId != null">
        aircraft_id = #{aircraftId,jdbcType=VARCHAR},
      </if>
      <if test="targetName != null">
        target_name = #{targetName,jdbcType=VARCHAR},
      </if>
      <if test="judgeMeans != null">
        judge_means = #{judgeMeans,jdbcType=TINYINT},
      </if>
      <if test="probability != null">
        probability = #{probability,jdbcType=TINYINT},
      </if>
      <if test="importTime != null">
        import_time = #{importTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.njust.model.TYpTargetRecog">
    update t_yp_target_recog
    set target_id = #{targetId,jdbcType=VARCHAR},
      target_type = #{targetType,jdbcType=TINYINT},
      point_id = #{pointId,jdbcType=VARCHAR},
      aircraft_id = #{aircraftId,jdbcType=VARCHAR},
      target_name = #{targetName,jdbcType=VARCHAR},
      judge_means = #{judgeMeans,jdbcType=TINYINT},
      probability = #{probability,jdbcType=TINYINT},
      import_time = #{importTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>